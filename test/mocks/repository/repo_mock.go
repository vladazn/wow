// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/repo.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChallenge is a mock of Challenge interface.
type MockChallenge struct {
	ctrl     *gomock.Controller
	recorder *MockChallengeMockRecorder
}

// MockChallengeMockRecorder is the mock recorder for MockChallenge.
type MockChallengeMockRecorder struct {
	mock *MockChallenge
}

// NewMockChallenge creates a new mock instance.
func NewMockChallenge(ctrl *gomock.Controller) *MockChallenge {
	mock := &MockChallenge{ctrl: ctrl}
	mock.recorder = &MockChallengeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChallenge) EXPECT() *MockChallengeMockRecorder {
	return m.recorder
}

// GetChallenge mocks base method.
func (m *MockChallenge) GetChallenge(ctx context.Context, key string) (int, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChallenge", ctx, key)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetChallenge indicates an expected call of GetChallenge.
func (mr *MockChallengeMockRecorder) GetChallenge(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChallenge", reflect.TypeOf((*MockChallenge)(nil).GetChallenge), ctx, key)
}

// RemoveChallenge mocks base method.
func (m *MockChallenge) RemoveChallenge(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveChallenge", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveChallenge indicates an expected call of RemoveChallenge.
func (mr *MockChallengeMockRecorder) RemoveChallenge(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveChallenge", reflect.TypeOf((*MockChallenge)(nil).RemoveChallenge), ctx, key)
}

// SetChallenge mocks base method.
func (m *MockChallenge) SetChallenge(ctx context.Context, key string, value int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetChallenge", ctx, key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetChallenge indicates an expected call of SetChallenge.
func (mr *MockChallengeMockRecorder) SetChallenge(ctx, key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetChallenge", reflect.TypeOf((*MockChallenge)(nil).SetChallenge), ctx, key, value)
}
